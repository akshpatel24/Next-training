"use client"
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
// import Tree
import Link from "next/link";
import { createContext, useContext } from "react";
import { ReactNode } from "react";
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});
const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});
 const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};
export const TreeContext = createContext<any>([]);
// export const usetrees=()=>useContext(trees)
// Define your array of trees to make it global
const trees = [
    { number: 1 },
    { kartwheel: 2 } // Correct syntax
  ];
function Navbar() {
  return (
    <>
      <header className="bg-slate-500-py-4">
        <div className="container mx-auto px-4">
          <nav className="flex items-center justify-be">
            <div>
              <Link href="/">Home</Link>            
            </div>
            <div style={{paddingLeft:10}}>
              <Link href="/Mountain">Snowtooh</Link>
            </div>
            <div style={{paddingLeft:10}}>
              <Link href="/Mountain/Hotel">Hotel</Link>
            </div>
            <div style={{paddingLeft:10}}>
              <Link href="/Mountain/Contact">Contact</Link>
            </div>
            <div style={{paddingLeft:10}}>
              <Link href="/Mountain/Chapter2practice">Practice </Link>
            </div>
            <div style={{paddingLeft:10}}>
              <Link href="/Mountain/Chapter3practice">Practice chapter3 </Link>
            </div>

            <div style={{paddingLeft:10}}>
              <Link href="/Mountain/Chapter4">Practice chapter4 </Link>
            </div>
            <div style={{paddingLeft:10}}>
              <Link href="/Mountain/Chapter5">Practice chapter5 </Link>
            </div>
          </nav>
        </div>
      </header>
    </>
  )
}
export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
      className={`${geistSans.variable} ${geistMono.variable} antialiased`} >
        <Navbar />  

        <TreeContext.Provider value={trees}>
       {children}
    </TreeContext.Provider>      
      </body>
    </html>
  );
}
